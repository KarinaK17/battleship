(()=>{"use strict";var t={426:(t,n,e)=>{e.d(n,{Z:()=>u});var o=e(537),r=e.n(o),a=e(645),s=e.n(a),i=e(667),l=e.n(i),c=new URL(e(81),e.b),p=new URL(e(500),e.b),A=s()(r());A.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Delius+Swash+Caps&family=Fondamento&family=Walter+Turncoat&display=swap);"]);var d=l()(c),h=l()(p);A.push([t.id,'* {\n  margin: 0;\n  padding: 0;\n  font-family: "Fondamento", cursive;\n\n  /* Optional nice fonts\n  font-family: "Delius Swash Caps", cursive;\n  font-family: "Walter Turncoat", cursive; */\n}\n\nhtml,\nbody {\n  height: 100%;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n}\n\nheader {\n  background-color: rgb(1, 67, 91);\n  padding-top: max(1.5%, 1rem);\n  padding-bottom: max(1.5%, 1rem);\n}\n\nh1 {\n  color: white;\n  text-align: center;\n  font-size: clamp(25px, 3rem, 5vw);\n}\n\n.content {\n  flex: 1 0 auto;\n  background-color: white;\n  display: flex;\n  gap: 25px;\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n}\n\n.board-container {\n  display: flex;\n  gap: 25px;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n}\n\nfooter {\n  flex-shrink: 0;\n  background-color: black;\n  color: white;\n  padding: 8px;\n  font-size: clamp(15px, 1rem, 2vw);\n  text-align: center;\n}\n\n.playerBoard {\n  height: 400px;\n  width: 400px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  background: url('+d+") center;\n}\n\n.computerBoard {\n  height: 400px;\n  width: 400px;\n  display: none;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  background: url("+d+") center;\n  cursor: url("+h+"), pointer;\n}\n\n@media (max-width: 500px) {\n  .playerBoard {\n    height: 250px;\n    width: 250px;\n  }\n\n  .computerBoard {\n    height: 250px;\n    width: 250px;\n  }\n}\n\n[data-row] {\n  display: flex;\n  flex-direction: column;\n  overflow: visible;\n  border: 2px solid rgb(135, 182, 196);\n  position: relative;\n}\n\n.ship {\n  box-sizing: border-box;\n  border: 2px rgb(1, 12, 1) solid;\n  background-color: rgb(187, 122, 71);\n  flex-grow: 1;\n  z-index: 5;\n  position: absolute;\n  cursor: grab;\n}\n\n.hit {\n  background-color: rgb(27, 173, 187);\n}\n\n.missed-attack {\n  background-color: rgb(188, 198, 198);\n}\n\n.explosion {\n  height: 90%;\n  width: 90%;\n  z-index: 100;\n}\n\n.gameover-window {\n  display: none;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  align-items: center;\n  justify-content: center;\n  z-index: 999;\n}\n\n.gameover {\n  background-color: white;\n  border: 2px black solid;\n  padding: min(20px, 5%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\nh3 {\n  font-size: clamp(23px, 1.7rem, 2vw);\n}\n\n.gameover p {\n  padding: min(20px, 5%);\n  font-size: clamp(20px, 1.2rem, 1.5vw);\n}\n\n.info {\n  text-align: center;\n  font-size: clamp(20px, 1.2rem, 1.5vw);\n  padding: min(20px, 5%);\n}\n\n.gameover button,\n.start-btn {\n  padding: min(10px, 3%);\n  border-radius: 15px;\n  font-size: clamp(20px, 1.2rem, 1.5vw);\n  background-color: rgb(1, 67, 91);\n  color: white;\n  font-weight: bold;\n  border: black 2px solid;\n  box-shadow: 2px 2px 10px black;\n}\n\n.gameover button:hover,\n.start-btn:hover {\n  padding: min(15px, 4%);\n  cursor: pointer;\n}\n\n.start-btn {\n  margin-bottom: 20px;\n}\n\na:link {\n  color: rgb(115, 243, 255);\n}\n\na:visited {\n  color: rgb(207, 209, 209);\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,SAAS;EACT,UAAU;EACV,kCAAkC;;EAElC;;4CAE0C;AAC5C;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,gCAAgC;EAChC,4BAA4B;EAC5B,+BAA+B;AACjC;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,iCAAiC;AACnC;;AAEA;EACE,cAAc;EACd,uBAAuB;EACvB,aAAa;EACb,SAAS;EACT,kBAAkB;EAClB,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,eAAe;EACf,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,uBAAuB;EACvB,YAAY;EACZ,YAAY;EACZ,iCAAiC;EACjC,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC,0DAAqC;AACvC;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC,0DAAqC;EACrC,wDAAuC;AACzC;;AAEA;EACE;IACE,aAAa;IACb,YAAY;EACd;;EAEA;IACE,aAAa;IACb,YAAY;EACd;AACF;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,iBAAiB;EACjB,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;EACtB,+BAA+B;EAC/B,mCAAmC;EACnC,YAAY;EACZ,UAAU;EACV,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,WAAW;EACX,UAAU;EACV,YAAY;AACd;;AAEA;EACE,aAAa;EACb,oCAAoC;EACpC,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,mBAAmB;EACnB,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,uBAAuB;EACvB,uBAAuB;EACvB,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,sBAAsB;EACtB,qCAAqC;AACvC;;AAEA;EACE,kBAAkB;EAClB,qCAAqC;EACrC,sBAAsB;AACxB;;AAEA;;EAEE,sBAAsB;EACtB,mBAAmB;EACnB,qCAAqC;EACrC,gCAAgC;EAChC,YAAY;EACZ,iBAAiB;EACjB,uBAAuB;EACvB,8BAA8B;AAChC;;AAEA;;EAEE,sBAAsB;EACtB,eAAe;AACjB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Delius+Swash+Caps&family=Fondamento&family=Walter+Turncoat&display=swap");\n\n* {\n  margin: 0;\n  padding: 0;\n  font-family: "Fondamento", cursive;\n\n  /* Optional nice fonts\n  font-family: "Delius Swash Caps", cursive;\n  font-family: "Walter Turncoat", cursive; */\n}\n\nhtml,\nbody {\n  height: 100%;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n}\n\nheader {\n  background-color: rgb(1, 67, 91);\n  padding-top: max(1.5%, 1rem);\n  padding-bottom: max(1.5%, 1rem);\n}\n\nh1 {\n  color: white;\n  text-align: center;\n  font-size: clamp(25px, 3rem, 5vw);\n}\n\n.content {\n  flex: 1 0 auto;\n  background-color: white;\n  display: flex;\n  gap: 25px;\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n}\n\n.board-container {\n  display: flex;\n  gap: 25px;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n}\n\nfooter {\n  flex-shrink: 0;\n  background-color: black;\n  color: white;\n  padding: 8px;\n  font-size: clamp(15px, 1rem, 2vw);\n  text-align: center;\n}\n\n.playerBoard {\n  height: 400px;\n  width: 400px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  background: url("./water.jpg") center;\n}\n\n.computerBoard {\n  height: 400px;\n  width: 400px;\n  display: none;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  background: url("./water.jpg") center;\n  cursor: url(target-cursor.png), pointer;\n}\n\n@media (max-width: 500px) {\n  .playerBoard {\n    height: 250px;\n    width: 250px;\n  }\n\n  .computerBoard {\n    height: 250px;\n    width: 250px;\n  }\n}\n\n[data-row] {\n  display: flex;\n  flex-direction: column;\n  overflow: visible;\n  border: 2px solid rgb(135, 182, 196);\n  position: relative;\n}\n\n.ship {\n  box-sizing: border-box;\n  border: 2px rgb(1, 12, 1) solid;\n  background-color: rgb(187, 122, 71);\n  flex-grow: 1;\n  z-index: 5;\n  position: absolute;\n  cursor: grab;\n}\n\n.hit {\n  background-color: rgb(27, 173, 187);\n}\n\n.missed-attack {\n  background-color: rgb(188, 198, 198);\n}\n\n.explosion {\n  height: 90%;\n  width: 90%;\n  z-index: 100;\n}\n\n.gameover-window {\n  display: none;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  align-items: center;\n  justify-content: center;\n  z-index: 999;\n}\n\n.gameover {\n  background-color: white;\n  border: 2px black solid;\n  padding: min(20px, 5%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\nh3 {\n  font-size: clamp(23px, 1.7rem, 2vw);\n}\n\n.gameover p {\n  padding: min(20px, 5%);\n  font-size: clamp(20px, 1.2rem, 1.5vw);\n}\n\n.info {\n  text-align: center;\n  font-size: clamp(20px, 1.2rem, 1.5vw);\n  padding: min(20px, 5%);\n}\n\n.gameover button,\n.start-btn {\n  padding: min(10px, 3%);\n  border-radius: 15px;\n  font-size: clamp(20px, 1.2rem, 1.5vw);\n  background-color: rgb(1, 67, 91);\n  color: white;\n  font-weight: bold;\n  border: black 2px solid;\n  box-shadow: 2px 2px 10px black;\n}\n\n.gameover button:hover,\n.start-btn:hover {\n  padding: min(15px, 4%);\n  cursor: pointer;\n}\n\n.start-btn {\n  margin-bottom: 20px;\n}\n\na:link {\n  color: rgb(115, 243, 255);\n}\n\na:visited {\n  color: rgb(207, 209, 209);\n}\n'],sourceRoot:""}]);const u=A},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",o=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),o&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),o&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,o,r,a){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(o)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(s[l]=!0)}for(var c=0;c<t.length;c++){var p=[].concat(t[c]);o&&s[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),e&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=e):p[2]=e),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),n.push(p))}},n}},667:t=>{t.exports=function(t,n){return n||(n={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),n.hash&&(t+=n.hash),/["'() \t\n]|(%20)/.test(t)||n.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,o=0;o<n.length;o++)if(n[o].identifier===t){e=o;break}return e}function o(t,o){for(var a={},s=[],i=0;i<t.length;i++){var l=t[i],c=o.base?l[0]+o.base:l[0],p=a[c]||0,A="".concat(c," ").concat(p);a[c]=p+1;var d=e(A),h={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)n[d].references++,n[d].updater(h);else{var u=r(h,o);o.byIndex=i,n.splice(i,0,{identifier:A,updater:u,references:1})}s.push(A)}return s}function r(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,r){var a=o(t=t||[],r=r||{});return function(t){t=t||[];for(var s=0;s<a.length;s++){var i=e(a[s]);n[i].references--}for(var l=o(t,r),c=0;c<a.length;c++){var p=e(a[c]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}a=l}}},569:t=>{var n={};t.exports=function(t,e){var o=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}},500:(t,n,e)=>{t.exports=e.p+"a56d02fb7220725f9e3e.png"},81:(t,n,e)=>{t.exports=e.p+"16c1affbe100c4fb6497.jpg"}},n={};function e(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return t[o](a,a.exports,e),a.exports}e.m=t,e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var o=n.getElementsByTagName("script");o.length&&(t=o[o.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),e.b=document.baseURI||self.location.href,e.nc=void 0;var o={};(()=>{e.d(o,{H6:()=>S,Wu:()=>k,W2:()=>B});var t=e(379),n=e.n(t),r=e(795),a=e.n(r),s=e(569),i=e.n(s),l=e(565),c=e.n(l),p=e(216),A=e.n(p),d=e(589),h=e.n(d),u=e(426),m={};m.styleTagTransform=h(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=A(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;class g{constructor(t,n,e,o,r){this.length=t,this.position=n,this.timesHit=0,this.sunk=!1,this.row=e,this.column=o,this.name=r}hit(){this.timesHit++}isSunk(){this.timesHit===this.length&&(this.sunk=!0)}}class C{constructor(t){this.name=t,this.row1=["","","","","","","","","",""],this.row2=["","","","","","","","","",""],this.row3=["","","","","","","","","",""],this.row4=["","","","","","","","","",""],this.row5=["","","","","","","","","",""],this.row6=["","","","","","","","","",""],this.row7=["","","","","","","","","",""],this.row8=["","","","","","","","","",""],this.row9=["","","","","","","","","",""],this.row10=["","","","","","","","","",""],this.ships=[]}placeShip(t,n,e,o,r){let a=new g(e,o,t,n,r),s="row".concat(t);if("h"==o)for(let o=1;o<=e;o++){if(n>10||t>10||n<1||t<1)throw new Error("Cannot place a ship here");this[s][n-1]=a,n++}else for(let o=1;o<=e;o++){if(console.log("times"),n>10||t>10||n<1||t<1)throw new Error("Cannot place a ship here");console.log(this[s]),this[s][n-1]=a,t++,s="row".concat(t)}this.ships.push(a)}deleteShip(t,n,e,o,r){this.ships.forEach((t=>{if(t.name==r){let n=this.ships.indexOf(t);this.ships.splice(n,1)}}));let a="row".concat(t);if("h"==o)for(let t=1;t<=e;t++)this[a][n-1]="",n++;else for(let o=1;o<=e;o++)this[a][n-1]="",t++,a="row".concat(t)}receiveAttack(t,n){let e="row".concat(t);return""==this[e][n-1]?(this[e][n-1]="missed attack",!1):(this[e][n-1].hit(),this[e][n-1].isSunk(),!0)}allSunk(){return console.log(this.ships),this.ships.every((t=>1==t.sunk))}}class f{constructor(t,n){this.name=t,this.turn=n,this.attacks=[]}attack(t,n,e,o){return o.receiveAttack(t,n)?(this.turn=!0,e.turn=!1,!0):(this.turn=!1,e.turn=!0,!1)}firstComputerAttack(t,n){let e=Math.ceil(10*Math.random()),o=Math.ceil(10*Math.random()),r=[];return r.push(e),r.push(o),console.log(r,"first move arr"),this.attacks.push(r),this.attack(e,o,t,n),r}computerAttack(t,n){let e=Math.ceil(10*Math.random()),o=Math.ceil(10*Math.random()),r=[];r.push(e),r.push(o),console.log(r,"first arr");const a=(t,n,e)=>{for(let o=0;o<this.attacks.length;o++)if(console.log(this.attacks,"first"),null==this.attacks[o]||this.attacks[o][0]==n&&this.attacks[o][1]==e)n=Math.ceil(10*Math.random()),e=Math.ceil(10*Math.random()),(t=[]).push(n),t.push(e),console.log(t,"second arr"),a(t,n,e);else if(console.log(this.attacks,"second"),o==this.attacks.length-1)return t};this.attacks.push(a(r,e,o));let s=this.attacks.length,i=[];return i.push(this.attacks[s-1][0]),i.push(this.attacks[s-1][1]),console.log(r,"last arr",this.attacks,"last attacks"),this.attack(this.attacks[s-1][0],this.attacks[s-1][1],t,n),i}}const E=document.querySelector(".board-container"),b=document.querySelector(".winner-message"),x=document.querySelector(".restart-btn");let v;function w(t){console.log(t,"dragStart"),v=t.target}function y(t){t.preventDefault()}document.querySelector(".start-btn").addEventListener("click",(()=>{document.querySelector(".computerBoard").style.display="grid",S(B[0],B[1],B[2])})),x.addEventListener("click",(()=>{document.querySelector(".gameover-window").style.display="none",E.innerHTML="",k(),document.querySelector(".computerBoard").style.display="none"})),C.prototype.print=function(t,n,e){const o=document.createElement("div");function r(t,n,e,r,a,s){const i=document.createElement("div");i.dataset.row=`${t}`,i.dataset.column=`${n+1}`,void 0!==e&&i.addEventListener("click",(()=>{if(console.log(r,s),a.attack(t,n+1,e,r),console.log(a.turn),!a.turn)for(;!a.turn;){let t=e.computerAttack(a,s),n=t[0],o=t[1];const i=document.createElement("img");i.src="./bomb.svg",i.classList.add("explosion"),document.querySelector(`.${s.name} [data-row="${n}"][data-column="${o}"]`).appendChild(i),console.log(r,"this"),console.log(s,"enemyBoard")}if("missed attack"==r[`row${t}`][n]&&i.classList.add("missed-attack"),!0!==r[`row${t}`][n].sunk&&"missed attack"!==r[`row${t}`][n]){const t=document.createElement("img");t.src="./bomb.svg",t.classList.add("explosion"),i.classList.add("hit"),i.appendChild(t)}if(1==r[`row${t}`][n].sunk){const t=document.createElement("img");t.src="./bomb.svg",t.classList.add("explosion"),i.appendChild(t)}r.displaySunkShips(),1!=r.allSunk()&&1!=s.allSunk()||(document.querySelector(".gameover-window").style.display="flex",1==r.allSunk()?b.textContent="Congratulations! You won!":b.textContent="Sorry, you lost. Better luck next time!")}),{once:!0}),o.appendChild(i)}E.appendChild(o),o.classList.add(`${this.name}`);for(let o=0;o<this.row1.length;o++)r(1,o,t,this,n,e);for(let o=0;o<this.row2.length;o++)r(2,o,t,this,n,e);for(let o=0;o<this.row3.length;o++)r(3,o,t,this,n,e);for(let o=0;o<this.row4.length;o++)r(4,o,t,this,n,e);for(let o=0;o<this.row5.length;o++)r(5,o,t,this,n,e);for(let o=0;o<this.row6.length;o++)r(6,o,t,this,n,e);for(let o=0;o<this.row7.length;o++)r(7,o,t,this,n,e);for(let o=0;o<this.row8.length;o++)r(8,o,t,this,n,e);for(let o=0;o<this.row9.length;o++)r(9,o,t,this,n,e);for(let o=0;o<this.row10.length;o++)r(10,o,t,this,n,e)},C.prototype.displayShips=function(){for(let t=0;t<this.ships.length;t++){const n=document.createElement("div");n.classList.add("ship"),n.dataset.length=`${this.ships[t].length}`,n.dataset.position=`${this.ships[t].position}`,n.dataset.timesHit=`${this.ships[t].timesHit}`,n.dataset.sunk=`${this.ships[t].sunk}`,n.dataset.x=`${this.ships[t].row}`,n.dataset.y=`${this.ships[t].column}`,n.dataset.name=`${this.ships[t].name}`;let e=document.querySelector(`.${this.name} [data-row="${n.dataset.x}"][data-column="${n.dataset.y}"]`),o=`${document.querySelector("[data-row]").offsetWidth}px`;"h"==this.ships[t].position&&(n.style.width=`calc(${o}*${this.ships[t].length} - 4px)`,n.style.height=`calc(${o} - 4px)`),"v"==this.ships[t].position&&(n.style.height=`calc(${o}*${this.ships[t].length} - 4px)`,n.style.width=`calc(${o} - 4px)`),e.appendChild(n),n.addEventListener("dragstart",(t=>{w(t),console.log(v,"beingDragged inside a drag start"),this.deleteShip(t.target.dataset.x,t.target.dataset.y,t.target.dataset.length,t.target.dataset.position,t.target.dataset.name)}))}},C.prototype.displaySunkShips=function(){for(let t=0;t<this.ships.length;t++){const n=document.createElement("div");n.classList.add("ship"),n.setAttribute("draggable",""),n.dataset.length=`${this.ships[t].length}`,n.dataset.position=`${this.ships[t].position}`,n.dataset.timesHit=`${this.ships[t].timesHit}`,n.dataset.sunk=`${this.ships[t].sunk}`,n.dataset.x=`${this.ships[t].row}`,n.dataset.y=`${this.ships[t].column}`,n.dataset.name=`${this.ships[t].name}`;let e=document.querySelector(`.${this.name} [data-row="${n.dataset.x}"][data-column="${n.dataset.y}"]`),o=`${document.querySelector("[data-row]").offsetWidth}px`;"h"==this.ships[t].position&&(n.style.width=`calc(${o}*${this.ships[t].length} - 4px)`,n.style.height=`calc(${o} - 4px)`),"v"==this.ships[t].position&&(n.style.height=`calc(${o}*${this.ships[t].length} - 4px)`,n.style.width=`calc(${o} - 4px)`),this.ships[t].sunk&&e.appendChild(n)}},C.prototype.makeCellsHelpDrag=function(t){const n=document.querySelectorAll(`.${t} [data-row]`);console.log(n),n.forEach((t=>{t.addEventListener("dragover",y),t.addEventListener("drop",(t=>{!function(t){console.log(t.target),t.target.appendChild(v)}(t),console.log(this),console.log(v,"beingDragged"),console.log(Number.parseInt(t.target.dataset.column)+1),this.placeShip(Number.parseInt(t.target.dataset.row),Number.parseInt(t.target.dataset.column),Number.parseInt(v.dataset.length),v.dataset.position,v.dataset.name),v.dataset.x=t.target.dataset.row,v.dataset.y=t.target.dataset.column,console.log(v,"beingDragged after")}))}))};let B=[];function k(){let t=new f("player",!1),n=new f("computer",!0),e=new C("playerBoard"),o=new C("computerBoard");return e.placeShip(4,4,1,"v","s1"),e.placeShip(7,4,1,"v","s2"),e.placeShip(3,7,1,"v","s3"),e.placeShip(9,10,1,"v","s4"),e.placeShip(3,1,2,"h","m1"),e.placeShip(6,6,2,"h","m2"),e.placeShip(1,5,2,"v","m3"),e.placeShip(6,1,3,"v","b1"),e.placeShip(9,6,3,"h","b2"),e.placeShip(2,9,4,"v","l1"),o.placeShip(2,2,1,"v","s1"),o.placeShip(2,4,1,"v","s2"),o.placeShip(2,6,1,"v","s3"),o.placeShip(2,8,1,"v","s4"),o.placeShip(8,6,2,"v","m1"),o.placeShip(6,9,2,"v","m2"),o.placeShip(4,2,2,"h","m3"),o.placeShip(4,5,3,"h","b1"),o.placeShip(6,4,3,"h","b2"),o.placeShip(6,2,4,"v","l1"),e.print(),o.print(n,t,e),e.displayShips(),e.makeCellsHelpDrag("playerBoard"),B=[],B.push(t),B.push(e),B.push(n),B.push(o),console.log(B),B}function S(t,n,e){for(;e.turn;){let o=e.firstComputerAttack(t,n),r=o[0],a=o[1];const s=document.createElement("img");s.src="./bomb.svg",s.classList.add("explosion"),document.querySelector(`.${n.name} [data-row="${r}"][data-column="${a}"]`).appendChild(s)}}k()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,